!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_PROGRAM_VERSION	5.8	//
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
execute_from_command_line	manage.py	/^    from django.core.management import execute_from_command_line$/;"	i
os	manage.py	/^import os$/;"	i
sys	manage.py	/^import sys$/;"	i
ADMINS	wallet/settings.py	/^ADMINS = ($/;"	v
DATABASES	wallet/settings.py	/^DATABASES = {$/;"	v
DEBUG	wallet/settings.py	/^DEBUG = True$/;"	v
INSTALLED_APPS	wallet/settings.py	/^INSTALLED_APPS = ($/;"	v
LANGUAGE_CODE	wallet/settings.py	/^LANGUAGE_CODE = 'en-us'$/;"	v
LOGGING	wallet/settings.py	/^LOGGING = {$/;"	v
MANAGERS	wallet/settings.py	/^MANAGERS = ADMINS$/;"	v
MEDIA_ROOT	wallet/settings.py	/^MEDIA_ROOT = '\/home\/arthur\/workspace\/wallet\/wallet_wiki\/static'$/;"	v
MEDIA_URL	wallet/settings.py	/^MEDIA_URL = ''$/;"	v
MIDDLEWARE_CLASSES	wallet/settings.py	/^MIDDLEWARE_CLASSES = ($/;"	v
ROOT_URLCONF	wallet/settings.py	/^ROOT_URLCONF = 'wallet.urls'$/;"	v
SECRET_KEY	wallet/settings.py	/^SECRET_KEY = 'n@bhw#tk(!tj1h$5146fr9+62_r_(=v8zmhiqvk7dw%vk!i=4u'$/;"	v
SITE_ID	wallet/settings.py	/^SITE_ID = 1$/;"	v
STATICFILES_DIRS	wallet/settings.py	/^STATICFILES_DIRS = ($/;"	v
STATICFILES_FINDERS	wallet/settings.py	/^STATICFILES_FINDERS = ($/;"	v
STATIC_ROOT	wallet/settings.py	/^STATIC_ROOT = ''$/;"	v
STATIC_URL	wallet/settings.py	/^STATIC_URL = '\/static\/'$/;"	v
TEMPLATE_DEBUG	wallet/settings.py	/^TEMPLATE_DEBUG = DEBUG$/;"	v
TEMPLATE_DIRS	wallet/settings.py	/^TEMPLATE_DIRS = ($/;"	v
TEMPLATE_LOADERS	wallet/settings.py	/^TEMPLATE_LOADERS = ($/;"	v
TIME_ZONE	wallet/settings.py	/^TIME_ZONE = 'America\/Chicago'$/;"	v
USE_I18N	wallet/settings.py	/^USE_I18N = True$/;"	v
USE_L10N	wallet/settings.py	/^USE_L10N = True$/;"	v
USE_TZ	wallet/settings.py	/^USE_TZ = True$/;"	v
WSGI_APPLICATION	wallet/settings.py	/^WSGI_APPLICATION = 'wallet.wsgi.application'$/;"	v
Api	wallet/urls.py	/^from tastypie.api import Api$/;"	i
admin	wallet/urls.py	/^from django.contrib import admin$/;"	i
include	wallet/urls.py	/^from django.conf.urls import patterns, include, url$/;"	i
patterns	wallet/urls.py	/^from django.conf.urls import patterns, include, url$/;"	i
url	wallet/urls.py	/^from django.conf.urls import patterns, include, url$/;"	i
urlpatterns	wallet/urls.py	/^urlpatterns = patterns('',$/;"	v
v1_api	wallet/urls.py	/^v1_api = Api(api_name='v1')$/;"	v
application	wallet/wsgi.py	/^application = get_wsgi_application()$/;"	v
get_wsgi_application	wallet/wsgi.py	/^from django.core.wsgi import get_wsgi_application$/;"	i
os	wallet/wsgi.py	/^import os$/;"	i
Authentication	wallet_wiki/authentication.py	/^from tastypie.authentication import Authentication$/;"	i
User	wallet_wiki/authentication.py	/^from wallet_wiki.models import User$/;"	i
UserAuthentication	wallet_wiki/authentication.py	/^class UserAuthentication(Authentication):$/;"	c
UserAuthorization	wallet_wiki/authentication.py	/^class UserAuthorization():$/;"	c
auth	wallet_wiki/authentication.py	/^from django.contrib import auth$/;"	i
is_authentication	wallet_wiki/authentication.py	/^	def is_authentication(self, request, **kwargs):$/;"	m	class:UserAuthentication
login_view	wallet_wiki/authentication.py	/^def login_view(request):$/;"	f
Article	wallet_wiki/models.py	/^class Article(models.Model):$/;"	c
Article_meta	wallet_wiki/models.py	/^class Article_meta(models.Model):$/;"	c
Attachment	wallet_wiki/models.py	/^class Attachment(models.Model):$/;"	c
Category	wallet_wiki/models.py	/^class Category(models.Model):$/;"	c
Collection	wallet_wiki/models.py	/^class Collection(models.Model):$/;"	c
Comment	wallet_wiki/models.py	/^class Comment(models.Model):$/;"	c
Inbox	wallet_wiki/models.py	/^class Inbox(models.Model):$/;"	c
Inbox_item	wallet_wiki/models.py	/^class Inbox_item(models.Model):$/;"	c
Keyword	wallet_wiki/models.py	/^class Keyword(models.Model):$/;"	c
Message	wallet_wiki/models.py	/^class Message(models.Model):$/;"	c
Meta	wallet_wiki/models.py	/^	class Meta:$/;"	c	class:Collection
Meta	wallet_wiki/models.py	/^	class Meta:$/;"	c	class:Message
PRIORITY_CHOICES	wallet_wiki/models.py	/^    PRIORITY_CHOICES = ($/;"	v	class:Ticket
STATUS_CHOICES	wallet_wiki/models.py	/^    STATUS_CHOICES = ($/;"	v	class:Ticket
Ticket	wallet_wiki/models.py	/^class Ticket(models.Model):$/;"	c
TicketComment	wallet_wiki/models.py	/^class TicketComment(models.Model):$/;"	c
User	wallet_wiki/models.py	/^class User(User):$/;"	c
User	wallet_wiki/models.py	/^from django.contrib.auth.models import User$/;"	i
__unicode__	wallet_wiki/models.py	/^	def __unicode__(self):$/;"	m	class:Article	file:
__unicode__	wallet_wiki/models.py	/^	def __unicode__(self):$/;"	m	class:Category	file:
__unicode__	wallet_wiki/models.py	/^	def __unicode__(self):$/;"	m	class:Collection	file:
__unicode__	wallet_wiki/models.py	/^	def __unicode__(self):$/;"	m	class:Keyword	file:
__unicode__	wallet_wiki/models.py	/^	def __unicode__(self):$/;"	m	class:User	file:
__unicode__	wallet_wiki/models.py	/^    def __unicode__(self):$/;"	m	class:Ticket	file:
__unicode__	wallet_wiki/models.py	/^    def __unicode__(self):$/;"	m	class:TicketComment	file:
admin	wallet_wiki/models.py	/^from django.contrib import admin$/;"	i
article	wallet_wiki/models.py	/^	article         = models.ForeignKey('Article')$/;"	v	class:Attachment
article	wallet_wiki/models.py	/^	article = models.ForeignKey('Article')$/;"	v	class:Comment
article_meta	wallet_wiki/models.py	/^	article_meta    = models.ForeignKey('Article_meta')$/;"	v	class:Collection
article_version	wallet_wiki/models.py	/^	article_version = models.PositiveIntegerField(default=0)$/;"	v	class:Collection
attachment_file	wallet_wiki/models.py	/^	attachment_file = models.FileField(upload_to=attachment_path)$/;"	v	class:Attachment
attachment_path	wallet_wiki/models.py	/^	def attachment_path(instance, filename):$/;"	m	class:Attachment
attachment_type	wallet_wiki/models.py	/^	attachment_type = models.CharField(max_length=100)$/;"	v	class:Attachment
author	wallet_wiki/models.py	/^	author         = models.ForeignKey('User')$/;"	v	class:Article_meta
author	wallet_wiki/models.py	/^	author       = models.ForeignKey('User')$/;"	v	class:Keyword
author	wallet_wiki/models.py	/^	author  = models.ForeignKey('User')$/;"	v	class:Comment
belong_to	wallet_wiki/models.py	/^	belong_to       = models.ForeignKey('User')$/;"	v	class:Collection
brief_content	wallet_wiki/models.py	/^	brief_content = models.TextField()	  # JSON$/;"	v	class:Inbox_item
category	wallet_wiki/models.py	/^	category       = models.ManyToManyField('Category')$/;"	v	class:Article_meta
category_name	wallet_wiki/models.py	/^	category_name = models.CharField(max_length=100, unique=True)$/;"	v	class:Category
collect_time	wallet_wiki/models.py	/^	collect_time    = models.DateTimeField(auto_now=True)$/;"	v	class:Collection
comment	wallet_wiki/models.py	/^    comment = models.TextField()$/;"	v	class:TicketComment
comment_ts	wallet_wiki/models.py	/^    comment_ts = models.DateTimeField(auto_now_add=True)$/;"	v	class:TicketComment
commenter_email	wallet_wiki/models.py	/^    commenter_email = models.EmailField()$/;"	v	class:TicketComment
content	wallet_wiki/models.py	/^	content    = models.TextField(blank=True)$/;"	v	class:Article
content	wallet_wiki/models.py	/^	content   = models.TextField()$/;"	v	class:Message
content	wallet_wiki/models.py	/^	content = models.TextField(blank=True)$/;"	v	class:Comment
create_ts	wallet_wiki/models.py	/^    create_ts = models.DateTimeField(auto_now_add=True)$/;"	v	class:Ticket
description	wallet_wiki/models.py	/^    description = models.TextField()$/;"	v	class:Ticket
fans	wallet_wiki/models.py	/^	fans      = models.ManyToManyField('User', related_name='user_fans')$/;"	v	class:User
following	wallet_wiki/models.py	/^	following = models.ManyToManyField('User', related_name='user_following')$/;"	v	class:User
from_user	wallet_wiki/models.py	/^	from_user = models.ForeignKey('User', related_name='message_from_user')$/;"	v	class:Message
has_read	wallet_wiki/models.py	/^	has_read  = models.BooleanField()$/;"	v	class:Message
inbox	wallet_wiki/models.py	/^	inbox         = models.ForeignKey('Inbox')$/;"	v	class:Inbox_item
is_draft	wallet_wiki/models.py	/^	is_draft   = models.BooleanField(default=False)$/;"	v	class:Article
is_private	wallet_wiki/models.py	/^	is_private		= models.BooleanField(default=False)$/;"	v	class:Collection
keyword	wallet_wiki/models.py	/^	keyword         = models.ManyToManyField('Keyword')$/;"	v	class:Collection
keyword	wallet_wiki/models.py	/^	keyword        = models.ManyToManyField('Keyword', related_name='article_meta_keyword')$/;"	v	class:Article_meta
keyword_name	wallet_wiki/models.py	/^	keyword_name = models.CharField(max_length=20)$/;"	v	class:Keyword
meta	wallet_wiki/models.py	/^	meta       = models.ForeignKey('Article_meta')$/;"	v	class:Article
models	wallet_wiki/models.py	/^from django.db import models$/;"	i
msg_type	wallet_wiki/models.py	/^	msg_type      = models.IntegerField() # 0:Create an article  1:modify an article  2:collect an ariticle$/;"	v	class:Inbox_item
nickname	wallet_wiki/models.py	/^	nickname  = models.CharField(max_length=50)$/;"	v	class:User
ordering	wallet_wiki/models.py	/^		ordering = ['belong_to', '-collect_time']$/;"	v	class:Collection.Meta
ordering	wallet_wiki/models.py	/^		ordering = ['from_user', '-time']$/;"	v	class:Message.Meta
os	wallet_wiki/models.py	/^import os$/;"	i
parent	wallet_wiki/models.py	/^	parent        = models.ForeignKey('Category', related_name='parent_category', null=True, blank=True)$/;"	v	class:Category
pathname	wallet_wiki/models.py	/^	pathname        = models.CharField(max_length=255)$/;"	v	class:Attachment
portrait	wallet_wiki/models.py	/^	portrait  = models.ImageField(upload_to=portrait_path)$/;"	v	class:User
portrait_path	wallet_wiki/models.py	/^	def portrait_path(instance, filename):$/;"	m	class:User
priority	wallet_wiki/models.py	/^    priority = models.CharField(max_length=1, choices=PRIORITY_CHOICES)$/;"	v	class:Ticket
sited_article	wallet_wiki/models.py	/^	sited_article  = models.ManyToManyField('Article_meta', related_name='article_meta_sited_article')$/;"	v	class:Article_meta
siting_article	wallet_wiki/models.py	/^	siting_article = models.ManyToManyField('Article_meta', related_name='article_meta_siting_article')$/;"	v	class:Article_meta
status	wallet_wiki/models.py	/^    status = models.CharField(max_length=3, choices=STATUS_CHOICES)$/;"	v	class:Ticket
submitter_email	wallet_wiki/models.py	/^    submitter_email = models.EmailField()$/;"	v	class:Ticket
ticket	wallet_wiki/models.py	/^    ticket = models.ForeignKey(Ticket)$/;"	v	class:TicketComment
time	wallet_wiki/models.py	/^	time          = models.DateTimeField(auto_now=True)$/;"	v	class:Inbox_item
time	wallet_wiki/models.py	/^	time       = models.DateTimeField(auto_now=True)$/;"	v	class:Article
time	wallet_wiki/models.py	/^	time      = models.DateTimeField(auto_now=True)$/;"	v	class:Message
time	wallet_wiki/models.py	/^	time    = models.DateTimeField(auto_now=True)$/;"	v	class:Comment
title	wallet_wiki/models.py	/^	title          = models.CharField(max_length=200)$/;"	v	class:Article_meta
title	wallet_wiki/models.py	/^    title = models.CharField(max_length=200)$/;"	v	class:Ticket
to_user	wallet_wiki/models.py	/^	to_user   = models.ForeignKey('User', related_name='message_to_user')$/;"	v	class:Message
user	wallet_wiki/models.py	/^	user = models.OneToOneField('User')$/;"	v	class:Inbox
version	wallet_wiki/models.py	/^	version    = models.PositiveIntegerField(default=0)$/;"	v	class:Article
ArticleResource	wallet_wiki/resources.py	/^class ArticleResource(ModelResource):$/;"	c
Article_meta_Resource	wallet_wiki/resources.py	/^class Article_meta_Resource(ModelResource):$/;"	c
AttachmentResource	wallet_wiki/resources.py	/^class AttachmentResource(ModelResource):$/;"	c
Authentication	wallet_wiki/resources.py	/^from tastypie.authentication import Authentication,BasicAuthentication$/;"	i
Authorization	wallet_wiki/resources.py	/^from tastypie.authorization import Authorization, DjangoAuthorization$/;"	i
BasicAuthentication	wallet_wiki/resources.py	/^from tastypie.authentication import Authentication,BasicAuthentication$/;"	i
Category_Resource	wallet_wiki/resources.py	/^class Category_Resource(ModelResource):$/;"	c
CollectionResource	wallet_wiki/resources.py	/^class CollectionResource(ModelResource):$/;"	c
CommentResource	wallet_wiki/resources.py	/^class CommentResource(ModelResource):$/;"	c
DjangoAuthorization	wallet_wiki/resources.py	/^from tastypie.authorization import Authorization, DjangoAuthorization$/;"	i
DraftResource	wallet_wiki/resources.py	/^class DraftResource(ModelResource):$/;"	c
InboxResource	wallet_wiki/resources.py	/^class InboxResource(ModelResource):$/;"	c
Inbox_item_Resource	wallet_wiki/resources.py	/^class Inbox_item_Resource(ModelResource):$/;"	c
KeywordResource	wallet_wiki/resources.py	/^class KeywordResource(ModelResource):$/;"	c
MessageResource	wallet_wiki/resources.py	/^class MessageResource(ModelResource):$/;"	c
Meta	wallet_wiki/resources.py	/^	class Meta:$/;"	c	class:Category_Resource
Meta	wallet_wiki/resources.py	/^	class Meta:$/;"	c	class:User_Resource
Meta	wallet_wiki/resources.py	/^    class Meta:$/;"	c	class:TicketCommentResource
Meta	wallet_wiki/resources.py	/^    class Meta:$/;"	c	class:TicketResource
ModelResource	wallet_wiki/resources.py	/^from tastypie.resources import ModelResource$/;"	i
TicketCommentResource	wallet_wiki/resources.py	/^class TicketCommentResource(ModelResource):$/;"	c
TicketResource	wallet_wiki/resources.py	/^class TicketResource(ModelResource):$/;"	c
User	wallet_wiki/resources.py	/^from django.contrib.auth.models import User$/;"	i
User_Resource	wallet_wiki/resources.py	/^class User_Resource(ModelResource):$/;"	c
dehydrate	wallet_wiki/resources.py	/^    def dehydrate(self, bundle):$/;"	m	class:TicketResource
detail_allowed_methods	wallet_wiki/resources.py	/^		detail_allowed_methods = ['get', 'post', 'put', 'delete']$/;"	v	class:Category_Resource.Meta
detail_allowed_methods	wallet_wiki/resources.py	/^		detail_allowed_methods = ['get', 'post', 'put', 'delete']$/;"	v	class:User_Resource.Meta
excludes	wallet_wiki/resources.py	/^		excludes = ['password']$/;"	v	class:User_Resource.Meta
fields	wallet_wiki/resources.py	/^from tastypie import fields$/;"	i
filtering	wallet_wiki/resources.py	/^		filtering = {$/;"	v	class:Category_Resource.Meta
filtering	wallet_wiki/resources.py	/^		filtering = {$/;"	v	class:User_Resource.Meta
list_allowed_methods	wallet_wiki/resources.py	/^		list_allowed_methods = ['get', 'post']	$/;"	v	class:User_Resource.Meta
list_allowed_methods	wallet_wiki/resources.py	/^		list_allowed_methods = ['get', 'post']$/;"	v	class:Category_Resource.Meta
model_to_dict	wallet_wiki/resources.py	/^from django.forms.models import model_to_dict$/;"	i
models	wallet_wiki/resources.py	/^from django.db import models$/;"	i
parent_category	wallet_wiki/resources.py	/^	parent_category = fields.ForeignKey('wallet_wiki.resources.Category_Resource', 'parent_category')$/;"	v	class:Category_Resource
queryset	wallet_wiki/resources.py	/^		queryset = Category.objects.all()$/;"	v	class:Category_Resource.Meta
queryset	wallet_wiki/resources.py	/^		queryset = User.objects.all()$/;"	v	class:User_Resource.Meta
queryset	wallet_wiki/resources.py	/^        queryset = Ticket.objects.all()$/;"	v	class:TicketResource.Meta
queryset	wallet_wiki/resources.py	/^        queryset = TicketComment.objects.all()$/;"	v	class:TicketCommentResource.Meta
resource_name	wallet_wiki/resources.py	/^		resource_name = 'category'$/;"	v	class:Category_Resource.Meta
resource_name	wallet_wiki/resources.py	/^	 	resource_name = 'user'$/;"	v	class:User_Resource.Meta
resource_name	wallet_wiki/resources.py	/^        resource_name = 'comment'$/;"	v	class:TicketCommentResource.Meta
resource_name	wallet_wiki/resources.py	/^        resource_name = 'ticket'$/;"	v	class:TicketResource.Meta
ticket	wallet_wiki/resources.py	/^    ticket = fields.ForeignKey(TicketResource, 'ticket', full=True)$/;"	v	class:TicketCommentResource
SimpleTest	wallet_wiki/tests.py	/^class SimpleTest(TestCase):$/;"	c
TestCase	wallet_wiki/tests.py	/^from django.test import TestCase$/;"	i
test_basic_addition	wallet_wiki/tests.py	/^    def test_basic_addition(self):$/;"	m	class:SimpleTest
